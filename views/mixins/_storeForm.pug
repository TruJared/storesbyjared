mixin storeForm(store = {})
  form(action=`/add/${store._id || ''}` method="POST" class="card" enctype="multipart/form-data")
    label(for="name") Name
    input(type="text" name="name" value=store.name)
    label(for="description") Description
    textarea(name="description" )= store.description
    //- image upload
    label(for="photo") Photo
      input(type="file" name="photo" accept="image/gif, image/png, image/jpeg")
      if store.photo
        img(src=`/uploads/${store.photo}`, alt=store.name width=200)
    //- address, lng and lat
    label(for="address") Address
    input(type="text" id="address" name="location[address]" value=(store.location && store.location.address))
    //- the name property is written in a manner to make use of
    //- app.use(bodyParser.urlencoded({ extended: true }));
    //- from app.js >>>> i.e. name "sends" location.address to
    //- store.js

    //- the value property with first check for store.location
    //- and then return store.location.address if store.location is true
    label(for="lng") Address Lng
    input(type="text" id="lng" name="location[coordinates][0]" value=store.location && store.location.coordinates[0] required)
    label(for="lng") Address Lat
    input(type="text" id="lat" name="location[coordinates][1]" value=store.location && store.location.coordinates[1] required)
    -const choices = ['Wifi', 'Open Late', 'Kid Friendly', 'Vegetarian', 'Serves Alcohol']
    -const tags = store.tags || []
    ul.tags
      each choice in choices
        .tag.tag__choice
          //- notice that choice is the variable from above
          input(type="checkbox" id=choice value=choice name="tags" checked=(tags.includes(choice)))
          //- could also write #{choice}
          label(for=choice)= choice
    input(type="submit" value="Save â†ª" class="button")
